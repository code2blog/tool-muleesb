<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd">

	<flow name="code2blog_pollFlow">

		<poll doc:name="Poll - every 30 seconds"
			doc:description="cron did not accept this format [5 0 * 8 *] for [2020-08-01 00:05:00]
Reference https://crontab.guru/#5_0_*_8_*

So using polling at 30 second interval">
			<fixed-frequency-scheduler frequency="30"
				timeUnit="SECONDS" />
			<component class="as.file_parse_to_db.FilePollingComponent"
				doc:name="Java - scan folder using FilePollingComponent.class" />
		</poll>

		<logger
			message="loggerUid=Logger-01, messageFlow=as_file_parse_to_db, description='file list generated by java component is set in outboundProperties', outboundProperties=#[message.outboundProperties] }  "
			level="INFO" doc:name="Logger-01 message.outboundProperties.fileList"
			doc:description="loggerUid=Logger-01, messageFlow=as_file_parse_to_db, description='file list generated by java component is set in outboundProperties', outboundProperties=#[message.outboundProperties] }  " />

		<set-variable variableName="employeeList"
			value="#[new java.util.LinkedList()]" doc:name="Variable - set employeeList" />

		<foreach rootMessageVariableName="filepath" doc:name="forEach - file in folder"
			collection="#[message.outboundProperties['fileList']]">
			<file:file-to-string-transformer
				doc:name="File to String" />
			<flow-ref name="code2blog_pollSub_Flow_LineParser" doc:name="subflow_LineParser" />
		</foreach>

		<logger
			message="{loggerUid=Logger-02, messageFlow=as_file_parse_to_db, description='payload for mongodb', payload=#[payload] }  "
			level="INFO" doc:name="Logger-02 mongo paylod is ..."
			doc:description="{loggerUid=Logger-02, messageFlow=as_file_parse_to_db, description='payload for mongodb', payload=#[payload] }  " />

	</flow>


    <sub-flow name="subflow_persistToMongodb">
        <logger message="Logger-persistToMongodb-place holder" level="INFO" doc:name="Logger-persistToMongodb-place holder"/>
    </sub-flow>


	<sub-flow name="code2blog_pollSub_Flow_LineParser">
		<logger
			message="loggerUid=Logger-03, messageFlow=as_file_parse_to_db, description='entire file content in payload', payload=#[payload] }  "
			level="INFO" doc:name="Logger-03 log entire file content"
			doc:description="loggerUid=Logger-03s, messageFlow=as_file_parse_to_db, description='entire file content in payload', payload=#[payload] }  
" />
		<expression-transformer
			expression="#[StringUtils.split(message.payload,'\n\r');]" doc:name="Expression - split by newline"
			returnSourceIfNull="true" />
		<foreach collection="#[message.payload]" counterVariableName="linecounter"
			rootMessageVariableName="lineRootMessage" doc:name="For Each">
			<flow-ref name="code2blog_pollSub_Flow_fileTokenizer" 
							doc:name="subflow_fileTokenizer" />
		</foreach>
	</sub-flow>


	<sub-flow name="code2blog_pollSub_Flow_fileTokenizer">
        <logger message="Logger-file tokenizer-place holder" level="INFO" doc:name="Logger-file tokenizer-place holder"/>
	</sub-flow>


</mule>
